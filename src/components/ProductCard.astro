---
import { Image } from "astro:assets";

interface Props {
  title: string;
  brand: string;
  quantity: string;
  price: number;
  salePrice: number;
  image: any; // Astro image import
  shopUrl?: string;
  description?: string;
}

const { title, brand, quantity, price, salePrice, image, shopUrl, description } = Astro.props;
---

{shopUrl ? (
  <a
    href={shopUrl}
    target="_blank"
    rel="noopener noreferrer"
    class="block w-full"
  >
    <div
      class="w-full flex flex-col md:flex-row rounded-xl overflow-hidden bg-white"
    >
      <!-- Product Image -->
      <div class="w-full md:w-1/3 flex-shrink-0 flex items-center justify-center bg-white p-6 md:h-80 md:py-8 md:px-0">
        <Image 
          src={image} 
          alt={title} 
          class="object-contain h-40 md:h-full w-auto max-w-full"
          width={240}
          height={224}
        />
      </div>
      <!-- Product Info -->
      <div class="flex flex-col p-6 md:p-8 flex-1">
        <h3 class="text-xl font-semibold text-gray-900 mb-3">
          {title}
        </h3>
        {description && (
          <p class="text-sm text-gray-700 mb-4 leading-relaxed">
            {description}
          </p>
        )}
        <div class="flex justify-between items-center mb-4 text-sm text-gray-700">
          <span class="font-medium">{brand}</span>
          <span class="text-gray-600">{quantity}</span>
        </div>
        <div class="flex items-center gap-2 mb-6">
          {price !== salePrice && (
            <span class="text-sm text-gray-500 line-through">
              ${price.toFixed(2)}
            </span>
          )}
          <span class="text-xl font-bold text-[var(--color-primary)]">
            ${salePrice.toFixed(2)}
          </span>
        </div>
        <div class="mt-auto flex md:justify-start">
          <div
            class="w-full md:max-w-[200px] bg-[var(--color-primary)] text-white py-3 px-6 rounded-full hover:bg-[var(--color-primary-dark)] transition-colors duration-300 text-center font-medium"
          >
            View in Shop
          </div>
        </div>
      </div>
    </div>
  </a>
) : (
  <div
    class="w-full flex flex-col md:flex-row rounded-xl overflow-hidden bg-white"
  >
    <!-- Product Image -->
    <div class="w-full md:w-1/3 flex-shrink-0 flex items-center justify-center bg-white p-6 md:h-80 md:py-8 md:px-0">
      <Image 
        src={image} 
        alt={title} 
        class="object-contain h-40 md:h-full w-auto max-w-full"
        width={240}
        height={224}
      />
    </div>
    <!-- Product Info -->
    <div class="flex flex-col p-6 md:p-8 flex-1">
      <h3 class="text-xl font-semibold text-gray-900 mb-3">
        {title}
      </h3>
      {description && (
        <p class="text-sm text-gray-700 mb-4 leading-relaxed">
          {description}
        </p>
      )}
      <div class="flex justify-between items-center mb-4 text-sm text-gray-700">
        <span class="font-medium">{brand}</span>
        <span class="text-gray-600">{quantity}</span>
      </div>
      <div class="flex items-center gap-2 mb-6">
        {price !== salePrice && (
          <span class="text-sm text-gray-500 line-through">
            ${price.toFixed(2)}
          </span>
        )}
        <span class="text-xl font-bold text-[var(--color-primary)]">
          ${salePrice.toFixed(2)}
        </span>
      </div>
      <div class="mt-auto flex md:justify-start">
        <button
          class="w-full md:max-w-[200px] bg-[var(--color-primary)] text-white py-3 px-6 rounded-full hover:bg-[var(--color-primary-dark)] transition-colors duration-300 font-medium text-center"
        >
          Buy in Our Shop
        </button>
      </div>
    </div>
  </div>
)}
