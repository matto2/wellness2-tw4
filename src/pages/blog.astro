---
import { getCollection } from "astro:content";
import Layout from "../layouts/Layout.astro";
import type { CollectionEntry } from "astro:content";
import LotusIcon from "../components/LotusIcon.astro";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";

// Import blog post images
import abdomenImage from "../assets/abdomen-8762847_1280.jpg";
import fallbackImage from "../assets/fallback.jpg";

// Create an image map
const imageMap: Record<string, ImageMetadata> = {
  "abdomen-8762847_1280.jpg": abdomenImage,
};

const posts = await getCollection("blog");
---

<Layout title="Newsletter | Wellness Medical Center">
  <div class="max-w-screen-xl mx-auto px-4 mt-20 xl:px-0">
    <div class="flex justify-center mb-4">
      <LotusIcon class="w-24 h-24" />
    </div>
    <h1
      class="text-3xl md:text-4xl font-medium mb-8 text-center text-[var(--color-primary)]"
    >
      Newsletter
    </h1>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        posts.map((post) => (
          <article class="bg-[var(--color-card-bg)] rounded-[24px] shadow-md overflow-hidden">
            {post.data.image && (
              <a href={`/blog/${post.slug}`} class="block">
                <div class="aspect-[16/9] overflow-hidden">
                  <Image
                    src={imageMap[post.data.image] || fallbackImage}
                    alt={post.data.title}
                    class="w-full h-full object-cover"
                    width={800}
                    height={450}
                    quality={80}
                  />
                </div>
              </a>
            )}
            <div class="p-4">
              <h2 class="text-xl font-medium text-[var(--color-primary)] mb-2">
                <a href={`/blog/${post.slug}`} class="hover:text-amber-800">
                  {post.data.title}
                </a>
              </h2>
              <div class="flex items-center gap-2 text-gray-600 mb-3 text-sm">
                <span>{post.data.author}</span>
                <span>â€¢</span>
                <time datetime={post.data.pubDate.toISOString()}>
                  {post.data.pubDate.toLocaleDateString("en-US", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </time>
              </div>
              {post.data.description && (
                <p class="text-gray-700 mb-3 text-sm">
                  {post.data.description}
                </p>
              )}
              <a
                href={`/blog/${post.slug}`}
                class="inline-flex items-center text-[var(--color-primary)] hover:text-amber-800 font-medium text-sm"
              >
                Read more
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-4 w-4 ml-2"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke="currentColor"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    stroke-width="2"
                    d="M9 5l7 7-7 7"
                  />
                </svg>
              </a>
            </div>
          </article>
        ))
      }
    </div>
  </div>
</Layout>
