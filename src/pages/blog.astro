---
import { getCollection } from "astro:content";
import BlogLayout from "../layouts/BlogLayout.astro";
import type { CollectionEntry } from "astro:content";
import { Image } from "astro:assets";
import type { ImageMetadata } from "astro";
import { sanity, urlFor } from "../lib/sanity";
import { postsList } from "../lib/queries";

// Import blog post images
import abdomenImage from "../assets/abdomen-8762847_1280.jpg";
import boxVideoImage from "../assets/moxa-static.jpg";
import fallbackImage from "../assets/fallback.jpg";

// Create an image map
const imageMap: Record<string, ImageMetadata> = {
  "abdomen-8762847_1280.jpg": abdomenImage,
  // Ensure the moxa boxes post shows a preview on index
  "box-video.jpg": boxVideoImage,
  "moxa-static.jpg": boxVideoImage,
};

const posts = await getCollection("blog");

// Try to load posts from Sanity; if not configured or empty, we fall back to Astro content
const useSanity = Boolean(import.meta.env.PUBLIC_SANITY_PROJECT_ID);
let sanityPosts: Array<any> = [];
if (useSanity) {
  try {
    sanityPosts = await sanity.fetch(postsList);
  } catch (err) {
    sanityPosts = [];
  }
}
---

<BlogLayout title="Health Education | Wellness Medical Center">
  <div class="max-w-screen-xl mx-auto px-4 xl:px-0 pt-32">
    <h1
      class="text-3xl md:text-4xl font-medium mb-8 text-center text-[var(--color-primary)]"
    >
      Health Education
    </h1>

    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
      {
        sanityPosts.length > 0
          ? sanityPosts.map((post: any) => (
              <a href={`/blog/${post.slug}`} class="block">
                <article class="bg-[var(--color-card-bg)] rounded-[24px] shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                  {post.mainImage && (
                    <div class="aspect-[16/9] overflow-hidden">
                      <img
                        src={urlFor(post.mainImage)
                          .width(800)
                          .height(450)
                          .fit("crop")
                          .auto("format")
                          .url()}
                        alt={post.title}
                        class="w-full h-full object-cover"
                        width="800"
                        height="450"
                        loading="lazy"
                        decoding="async"
                      />
                    </div>
                  )}
                  <div class="p-4">
                    <h2 class="text-xl font-medium text-[var(--color-primary)] mb-2">
                      {post.title}
                    </h2>
                    <div class="flex items-center gap-2 text-gray-600 mb-3 text-sm">
                      <time datetime={new Date(post.publishedAt).toISOString()}>
                        {new Date(post.publishedAt).toLocaleDateString(
                          "en-US",
                          {
                            year: "numeric",
                            month: "long",
                            day: "numeric",
                          }
                        )}
                      </time>
                    </div>
                    {post.excerpt && (
                      <p class="text-gray-700 mb-3 text-sm">{post.excerpt}</p>
                    )}
                    <div class="inline-flex items-center text-[var(--color-primary)] hover:text-amber-800 font-medium text-sm">
                      Read more
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4 ml-2"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 5l7 7-7 7"
                        />
                      </svg>
                    </div>
                  </div>
                </article>
              </a>
            ))
          : posts.map((post) => (
              <a href={`/blog/${post.slug}`} class="block">
                <article class="bg-[var(--color-card-bg)] rounded-[24px] shadow-md overflow-hidden hover:shadow-lg transition-shadow">
                  {post.data.image && (
                    <div class="aspect-[16/9] overflow-hidden">
                      <Image
                        src={imageMap[post.data.image] || fallbackImage}
                        alt={post.data.title}
                        class="w-full h-full object-cover"
                        width={800}
                        height={450}
                        quality={80}
                      />
                    </div>
                  )}
                  <div class="p-4">
                    <h2 class="text-xl font-medium text-[var(--color-primary)] mb-2">
                      {post.data.title}
                    </h2>
                    <div class="flex items-center gap-2 text-gray-600 mb-3 text-sm">
                      <span>{post.data.author}</span>
                      <span>â€¢</span>
                      <time datetime={post.data.pubDate.toISOString()}>
                        {post.data.pubDate.toLocaleDateString("en-US", {
                          year: "numeric",
                          month: "long",
                          day: "numeric",
                        })}
                      </time>
                    </div>
                    {post.data.description && (
                      <p class="text-gray-700 mb-3 text-sm">
                        {post.data.description}
                      </p>
                    )}
                    <div class="inline-flex items-center text-[var(--color-primary)] hover:text-amber-800 font-medium text-sm">
                      Read more
                      <svg
                        xmlns="http://www.w3.org/2000/svg"
                        class="h-4 w-4 ml-2"
                        fill="none"
                        viewBox="0 0 24 24"
                        stroke="currentColor"
                      >
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M9 5l7 7-7 7"
                        />
                      </svg>
                    </div>
                  </div>
                </article>
              </a>
            ))
      }
    </div>
  </div>
</BlogLayout>
