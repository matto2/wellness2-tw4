---
import { getCollection } from "astro:content";
import BlogPostLayout from "../../layouts/BlogPostLayout.astro";
import type { CollectionEntry } from "astro:content";
import type { ImageMetadata } from "astro";
import boxVideo from "../../assets/moxa-static.jpg";
import fallbackImage from "../../assets/fallback.jpg";
import boxVideoFile from "../../assets/box.mp4";

// Image map for local blog post images
const imageMap: Record<string, ImageMetadata> = {
  "box-video.jpg": boxVideo,
};

export async function getStaticPaths() {
  const posts = await getCollection("blog");
  return posts.map((post: CollectionEntry<"blog">) => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { slug } = Astro.params;
const { post } = Astro.props;
let AstroContent: any | undefined;

// Render Astro content
const rendered = await post.render();
AstroContent = rendered.Content;

const isMoxaBoxesPost = post.slug === "acupuncture-digestive-function";
---

<BlogPostLayout
  title={post.data.title}
  pubDate={post.data.pubDate}
  author={post.data.author}
  readTime={post.data.readTime}
  video={isMoxaBoxesPost ? boxVideoFile : undefined}
  image={
    !isMoxaBoxesPost
      ? imageMap[post.data.image] || fallbackImage
      : undefined
  }
>
  <div>{AstroContent && <AstroContent />}</div>
</BlogPostLayout>
